from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_absolute_error, mean_squared_error
import numpy as np

# 1 Features & Target
X = df.drop(columns=['Max Day'])
y = df['Max Day']

# 2 Split into Train/Test
X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, random_state=42
)

# 3 Train Random Forest Model
model = RandomForestRegressor(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# 4 Predict on Test Data
y_pred = model.predict(X_test)

# 5 Evaluate Model
mae = mean_absolute_error(y_test, y_pred)
rmse = np.sqrt(mean_squared_error(y_test, y_pred))
r2 = model.score(X_test, y_test)

print("Regression Model Trained")
print(f"MAE : {mae:.2f}")
print(f"RMSE: {rmse:.2f}")
print(f"RÂ²  : {r2:.2f}")

# 6 Add Predictions to Dataset
df.loc[X_test.index, 'Predicted_Max_Day'] = y_pred
df['Predicted_Max_Day'] = df['Predicted_Max_Day'].fillna(df['Predicted_Max_Day'].mean())
